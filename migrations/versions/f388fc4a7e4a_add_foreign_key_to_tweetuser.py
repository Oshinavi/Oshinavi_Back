"""Add foreign key to TweetUser

Revision ID: f388fc4a7e4a
Revises: 4f34e0ef462b
Create Date: 2025-03-25 19:54:26.386915

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f388fc4a7e4a'
down_revision = '4f34e0ef462b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tweet',
    sa.Column('tweet_id', sa.Integer(), nullable=False),
    sa.Column('tweet_username', sa.String(length=120), nullable=False),
    sa.Column('tweet_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('tweet_included_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('tweet_text', sa.String(length=255), nullable=False),
    sa.Column('tweet_translated_text', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('tweet_id'),
    sa.UniqueConstraint('tweet_username')
    )
    op.create_table('tweet_user',
    sa.Column('tweet_internal_id', sa.String(length=120), nullable=False),
    sa.Column('tweet_id', sa.String(length=120), nullable=False),
    sa.Column('bio', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('tweet_internal_id'),
    sa.UniqueConstraint('tweet_id')
    )
    op.create_table('user_oshi',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('oshi_tweet_id', sa.String(length=120), nullable=False),
    sa.Column('oshi_username', sa.String(length=120), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('oshi_tweet_id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tweet_id', sa.String(length=120), nullable=True))
        batch_op.create_unique_constraint(None, ['tweet_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('tweet_id')

    op.drop_table('user_oshi')
    op.drop_table('tweet_user')
    op.drop_table('tweet')
    # ### end Alembic commands ###
